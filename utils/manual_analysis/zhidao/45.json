{"documents":[{"is_selected":false,"title":"java 构造方法中super()的作用","most_related_para":1,"paragraphs":{"0":"super表示当前类的父类，super()调用的是父类默认的构造方法，即这样可以对父类进行初始化。如何没有对父类进行初始化，当子类调用父类的方法时，便会从逻辑上出现错误，因为没对父类初始化，父类的方法和属性便没有内存空间。","1":"1)super（参数）：调用基类中的某一个构造函数（应该为构造函数中的第一条语句）          2)this（参数）：调用本类中另一种形成的构造函数（应该为构造函数中的第一条语句）   3)super:　它引用当前对象的直接父类中的成员（用来访问直接父类中被隐藏的父类中成员数据或函数，基类与派生类中有相同成员定义时如：super.变量名    super.成员函数据名（实参）       4)this：它代表当前对象名（在程序中易产生二义性之处，应使用this来指明当前对象；如果函数的形参与类中的成员数据同名，这时需用this来指明成员变量名）        5）调用super()必须写在子类构造方法的第一行，否则编译不通过。每个子类构造方法的第一条语句，都是隐含地调用super()，如果父类没有这种形式的构造函数，那么在编译的时候就会报错。　　   6）super()和this()类似,区别是，super()从子类中调用父类的构造方法，this()在同一类内调用其它方法。　　   7）super()和this()均需放在构造方法内第一行。　　   8）尽管可以用this调用一个构造器，但却不能调用两个。　　   9）this和super不能同时出现在一个构造函数里面，因为this必然会调用其它的构造函数，其它的构造函数必然也会有super语句的存在，所以在同一个构造函数里面有相同的语句，就失去了语句的意义，编译器也不会通过。　　   10）this()和super()都指的是对象，所以，均不可以在static环境中使用。包括：static变量,static方法，static语句块。　　   11）从本质上讲，this是一个指向本对象的指针, 然而super是一个Java关键字。","2":"<p><img src=\"37249502226\" /></p>","3":"初始化父类,并可以调用父类中的方法和属性","4":"super();是调用父类的无参构造方法,创建一个父类(这是因为创建子类对象之前都要先创建父类对象,以便他继承父类的属性和方法),只有先创建了父类,之类才能正确初始化","5":"给你举个例子class Father {  Father(){print ('father');};}class Son {  Son(){print ('son')};}如果只是这样，那么构造Son之前会在后台调用一下super()函数，调用过程你看不到，但是确实执行了，结果是先father后son但是这种时候你显示的写个super就没有意义了，那么他在什么时候用呢，再举个例子给你举个例子class Father {  Father(){print ('father');};  Father(int age){print ('father is'+age);};}class Son {  Son(){super(36);print ('son')};}这种情况下输出的就不是father 和 son了，而是father is 36 和 son就是说在你父类不止一个构造函数时，显示的调用super才有意义进行初始化是一个方面，像我这个例子里就是输出了一些信息其实就是按照程序运行顺序先做什么后做什么，网络视频说的意思对，但没解释清楚","6":"你可以网上百度一下，super表示的是当前类的父类，super（）只是进行初始化的，继承父类的一些属性，这个super();在你写的类中也可以不要的，写在此处只是为了让初学者易上手而已。","7":"其实在java里，super关键字有主要的两种用法：1、用在子类的构造方法里，主要是调用父类的默认构造方法。2、在子类里调用隐藏或重写的属性或行为。要理解用法第一，涉及到java的对象的初始化，要明白第二用法，不难但要先有继承多态的基础，就很好理解了！"},"bs_rank_pos":2,"fake_paras":[[],[],[]]},{"is_selected":true,"title":"java语言中,构造函数的作用是什么","most_related_para":1,"paragraphs":{"0":"Java类至少包含一个构造器，如果没有定义，那么系统会为这个类提供一个无参构造器。构造函数是在创建给定类型的对象时执行的类方法，它通常用于初始化数据成员如果该类中定义了一个私有的构造函数，那么这个类就不能被new","1":"%%$构造函数是一种特殊的函数。其主要功能是用来在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中。构造函数与类名相同，可重载多个不同的构造函数。在JAVA语言中，构造函数与C++语言中的构造函数相同，JAVA语言中普遍称之为构造方法。$%%"},"bs_rank_pos":3,"fake_paras":[[1],[],[]]},{"is_selected":true,"title":"java空的构造方法有什么作用","most_related_para":0,"paragraphs":{"0":"$$空构造方法叫做默认构造方法，在初始化类对象时如果没有传入的参数，就会调用默认构造方法。可以在默认构造方法里面完成一些默认初始化操作，如：给变量赋默认值、内部变量初始化等等。默认构造方法可以省略，这时当初始化该类的对象时，不做任何操作。但是需要注意一点，假如你写的类没有默认构造方法，而有别的带参数构造方法，那就必须在初始化该类的对象时带参数，否则会报错。$$"},"bs_rank_pos":5,"fake_paras":[[0],[],[]]},{"is_selected":false,"title":"java中构造函数和构造方法的区别","most_related_para":0,"paragraphs":{"0":"构造函数每创建一个类的实例都去初始化它的所有变量是乏味的。如果一个对象在被创建时就完成了所有的初始工作，将是简单的和简洁的。因此，Java在类里提供了一个特殊的成员函数，叫做构造函数（Constructor）。 一个构造函数是对象被创建时初始对象的成员函数。它具有和它所在的类完全一样的名字。一旦定义好一个构造函数，创建对象时就会自动调用它。构造函数没有返回类型，即使是void类型也没有。这是因为一个类的构造函数的返回值的类型就是这个类本身。构造函数的任务是初始化一个对象的内部状态，所以用new操作符创建一个实例后，立刻就会得到一个清楚、可用的对象。构造方法是一种特殊的方法，具有以下特点。 （1）构造方法的方法名必须与类名相同。 （2）构造方法没有返回类型，也不能定义为void，在方法名前面不声明方法类型。 （3）构造方法的主要作用是完成对象的初始化工作，它能够把定义对象时的参数传给对象的域。 （4）构造方法不能由编程人员调用，而要系统调用。 （5）一个类可以定义多个构造方法，如果在定义类时没有定义构造方法，则编译系统会自动插入一个无参数的默认构造器，这个构造器不执行任何代码。 （6）构造方法可以重载，以参数的个数，类型，或排列顺序区分。","1":"没有函数的概念，都叫方法，其实两者基本一样。","2":"一样的","3":"java中没有函数的概念，方法就是指函数。所以两者是一样的。","4":"不知道","5":"c里面叫函数java里面叫方法，其实是一个东西。","6":"构造方法也就是构造函数，在java中都是一样的。其它的我就不知道。","7":"在java里函数就是方法  两个是一样的","8":"一般我们讲的\"函数\"就是\"方法\";构造函数=构造方法;构造方法是一种特殊的方法，具有以下特点。(1)构造方法的方法名必须与类名相同。(2)构造方法没有返回类型，也不能定义为void，在方法名前面不声明方法类型。(3)构造方法的主要作用是完成对象的初始化工作，它能够把定义对象时的参数传给对象的域。(4)一个类可以定义多个构造方法，如果在定义类时没有定义构造方法，则编译系统会自动插入一个无参数的默认构造器，这个构造器不执行任何代码。(5)构造方法可以重载，以参数的个数，类型，顺序。java构造函数的继承问题//不能继承(1)子类只继承父类的默认(缺省)构造函数，即无形参构造函数。如果父类没有默认构造函数，那子类不能从父类继承默认构造函数。(2)子类从父类处继承来的父类默认构造函数，不能成为子类的默认构造函数。(3)在创建对象时，先调用父类默认构造函数对对象进行初始化，然后调用子类自身自己定义的构造函数。(4)如果子类想调用父类的非默认构造函数，则必须使用super来实现。(5)子类必须调用父类的构造函数。可以通过系统自动调用父类的默认构造函数，如果父类没有默认构造函数时，子类构造函数必须通过super调用父类的构造函数。","9":"java里函数和方法是一个东东...所以构造函数和构造方法是同一个东东的两个不同的名字而已...","10":"构造函数就是它的构造器，构造方法没有这么一说吧！","11":"这不是构造函数，构造函数是没有返回值的， public void IntAdder()     {      x = 39;y = 54; z = x + y; }而此函数的返回类型的void","12":"<p><img src=\"37927446306\" /></p>"},"bs_rank_pos":6,"fake_paras":[[],[],[]]},{"is_selected":true,"title":"在java中什么是类的构造方法及作用","most_related_para":0,"paragraphs":{"0":"$$构造方法就是和类名相同的方法，创建对象时，会根据构造方法创建，作用是，为类的属性分配内存空间$$"},"bs_rank_pos":7,"fake_paras":[[0],[],[]]}],"answer_spans":[[0,77]],"fake_answers":["构造函数是一种特殊的函数。其主要功能是用来在创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中。构造函数与类名相同，可重载多个不同的构造函数。在JAVA语言中，构造函数与C++语言中的构造函数相同，JAVA语言中普遍称之为构造方法。"],"question":"java构造方法的作用","answers":["构造函数是一种特殊的函数。其主要功能是用来在创建对象时初始化对象， 即为对象成员变量赋初始值，总与new运算符一起使用在创建对象的语句中。构造函数与类名相同，可重载多个不同的构造函数。在JAVA语言中，构造函数与C++语言中的构造函数相同，JAVA语言中普遍称之为构造方法。","空构造方法叫做默认构造方法，在初始化类对象时如果没有传入的参数，就会调用默认构造方法。可以在默认构造方法里面完成一些默认初始化操作，如：给变量赋默认值、内部变量初始化等等。默认构造方法可以省略，这时当初始化该类的对象时，不做任何操作。但是需要注意一点，假如你写的类没有默认构造方法，而有别的带参数构造方法，那就必须在初始化该类的对象时带参数，否则会报错。","构造方法就是和类名相同的方法，创建对象时，会根据构造方法创建，作用是，为类的属性分配内存空间"],"answer_docs":[1],"question_type":"DESCRIPTION","question_id":188935,"fact_or_opinion":"FACT","match_scores":[1.0],"model_answer":["空构造方法叫做默认构造方法，在初始化类对象时如果没有传入的参数，就会调用默认构造方法。可以在默认构造方法里面完成一些默认初始化操作，如：给变量赋默认值、内部变量初始化等等。默认构造方法可以省略，这时当初始化该类的对象时，不做任何操作。但是需要注意一点，假如你写的类没有默认构造方法，而有别的带参数构造方法，那就必须在初始化该类的对象时带参数，否则会报错。"],"model_score":2}